core: {
    loguru_verbosity: 3
    hidpi: false
    debug_with_profiler: true //makes the profiler print when it starts and stops time
}

train: {
    // dataset_name: "volref" //voxelref
    // dataset_name: "nerf" //voxelref, nerf
    // dataset_name: "easypbr" //voxelref, nerf
    // dataset_name: "dtu" //voxelref, nerf
    // with_viewer: true 
    with_visdom: false 
    with_tensorboard: false
    with_wandb: false
    save_checkpoint: false
}




loader_vol_ref: {
    // dataset_path: "/media/rosu/Data/data/volumetric_refienement_data/augustus-ps"
    // dataset_path: "/media/rosu/Data/data/volumetric_refienement_data/lucy-ps"
    // dataset_path: "/media/rosu/Data/data/volumetric_refienement_data/sokrates-ps"
    // dataset_path: "/media/rosu/Data/data/volumetric_refienement_data/figure-mvs"
    dataset_path: "/media/rosu/Data/data/volumetric_refienement_data/sokrates-mvs"
    // dataset_path: "/media/rosu/Data/data/volumetric_refienement_data/vase-mvs"
    autostart: false
    preload: true //preload the meshes in memory which is usually quite fast if they are small, or continously read them from memory

    nr_samples_to_skip: 0
    nr_samples_to_read: -1
    shuffle: true
    rgb_subsample_factor: 8
    depth_subsample_factor: 8
    load_rgb_with_valid_depth: true
    do_overfit: false //return only one of the samples the whole time, concretely the first sample in the dataset
    // do_overfit: true //return only one of the samples the whole time, concretely the first sample in the dataset

    scene_translation: [0.1, -0.1, 1.2]
    scene_scale_multiplier: 1.0
}



loader_nerf: {

    dataset_path: "/media/rosu/Data/data/nerf/nerf_synthetic/nerf_synthetic"

    // restrict_to_scene_name: "chair"
    // restrict_to_scene_name: "drums"
    // restrict_to_scene_name: "ficus"
    // restrict_to_scene_name: "hotdog"
    restrict_to_scene_name: "lego"
    // restrict_to_scene_name: "materials"
    // restrict_to_scene_name: "mic"
    // restrict_to_scene_name: "ship"

    subsample_factor: 1
    autostart: false
    shuffle: true
    mode: "train" //train, val, test
    load_mask: true
    // do_overfit: true //return only one of the samples the whole time, concretely the first sample in the dataset
    do_overfit: false //return only one of the samples the whole time, concretely the first sample in the dataset
    scene_scale_multiplier: 0.25 // a scene_scale of 0.25 keeps the mesh inside the unit sphere
}

loader_easypbr: {
    dataset_path: "/media/rosu/Data/data/easy_pbr_renders"
    // dataset_path: "/home/rosu/work/data/easy_pbr_render"
    object_name:"head"
    // object_name:"vase"
    // object_name:"hair2D"
    // object_name:"monstera"
    subsample_factor: 2
    autostart: false
    shuffle: true
    limit_to_nr_imgs: -1 //set to -1 to load all the images
    // limit_to_nr_imgs: 14 //set to -1 to load all the images
    // img_selector: "random" //when limiting the nr of images, we can either cloose them randomly or select the X furthest frames from each other
    img_selector: "furthest" //when limiting the nr of images, we can either cloose them randomly or select the X furthest frames from each other
    mode: "train" //train, val, test
    // do_overfit: true //return only one of the samples the whole time, concretely the first sample in the dataset
    do_overfit: false //return only one of the samples the whole time, concretely the first sample in the dataset
    // scene_scale_multiplier: 0.3
    // scene_scale_multiplier: 0.0003
    scene_scale_multiplier: {
        head: 1.0
        vase: 0.00015
        hair2D: 0.1
        monstera: 1.0
    }
}


loader_dtu: {

    // dataset_path: "/media/rosu/Data/data/pixel_nerf_data/dtu_dataset/rs_dtu_4/DTU"
    dataset_path: "/media/rosu/Data/data/neus_data/data_DTU"
    // dataset_path: "/home/user/rosu/data/neus_data/data_DTU"
    mode: "all"
    load_mask: false
    // restrict_to_scan_idx: 37
    // restrict_to_scene_name: "dtu_scan24" //house  //works
    // restrict_to_scene_name: "dtu_scan37" //scissors //works
    // restrict_to_scene_name: "dtu_scan40" //bricks //works
    // restrict_to_scene_name: "dtu_scan55" //bunny    //works but the corners of the box are not supervized
    // restrict_to_scene_name: "dtu_scan63" //fruits      //works
    // restrict_to_scene_name: "dtu_scan65" //skull     //works
    // restrict_to_scene_name: "dtu_scan69" //snowman    //works but corners of the box are not supervized well
    // restrict_to_scene_name: "dtu_scan83" //smurf      /works
    // restrict_to_scene_name: "dtu_scan97" //cans         /works
    // restrict_to_scene_name: "dtu_scan105" //bear         /works
    // restrict_to_scene_name: "dtu_scan106" //birds          //works 
    // restrict_to_scene_name: "dtu_scan110" //goldenbunny   //works
    // restrict_to_scene_name: "dtu_scan114" //budha       /fails sometimes randomly but it's in bounds
    // restrict_to_scene_name: "dtu_scan118" //angel    //works
    // restrict_to_scene_name: "dtu_scan122" //owl      //works

    restrict_to_scene_name: "bmvs_bear"    //works
    // restrict_to_scene_name: "bmvs_clock"      //works
    // restrict_to_scene_name: "bmvs_dog"       //works
    // restrict_to_scene_name: "bmvs_durian"    //works
    // restrict_to_scene_name: "bmvs_jade"      //works
    // restrict_to_scene_name: "bmvs_man"       //works
    // restrict_to_scene_name: "bmvs_sculpture"  //works 
    // restrict_to_scene_name: "bmvs_stone"     //works
    autostart: false
    read_with_bg_thread: false


    subsample_factor: 4
    shuffle: true
    // do_overfit: true //return only one of the samples the whole time, concretely the first sample in the dataset
    do_overfit: false //return only one of the samples the whole time, concretely the first sample in the dataset
    load_as_shell: false
    preload_to_gpu_tensors: false //preloads all the rgb and maks(if enabled) into cuda tensors. 
    scene_scale_multiplier: 0.4
    rotate_scene_x_axis_degrees: 115

}




visualization: {
    show_gui: true

    subsample_factor: 1
    enable_culling: true

    cam: {
        fov: 60 //can be a float value (fov: 30.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        near: "auto" //can be a float value (near: 0.01) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        far: "auto" //can be a float value (far: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        exposure: 1.0 //can be floar or "auto"
    }

    scene: {
        floor_visible: true
        floor_metric: true
    }

    ssao: {
        enable_ssao: true
        ao_downsample: 1
        kernel_radius: "auto" //can be a float value (kernel_radius: 10,0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
        ao_power: 4
        ao_blur_sigma_spacial: 2.0
        ao_blur_sigma_depth: 0.0001
    }

    edl: {
        auto_settings: true
        enable_edl_lighting: false
        edl_strength: 8.0
    }

    background:{
        show_background_img: false
        background_img_path: ""
    }

    ibl: {
        enable_ibl: true
        show_environment_map: false
        // environment_map_path: "/media/rosu/Data/data/sibl/Desert_Highway/Road_to_MonumentValley_Ref.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/Footprint_Court/Footprint_Court_2k.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/Circus_Backstage/Circus_Backstage_3k.hdr"
        // environment_map_path: "/media/rosu/Data/data/sibl/canary_wharf_4k.hdr"
        environment_map_path: "sibl/Barcelona_Rooftops/Barce_Rooftop_C_3k.hdr"
        // environment_cubemap_resolution: 2048
        environment_cubemap_resolution: 512
        irradiance_cubemap_resolution: 32
        prefilter_cubemap_resolution: 128
        brdf_lut_resolution: 512
    }

    lights:{
        nr_spot_lights: 3
        spot_light_0: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 2048
        }
        spot_light_1: {
            power: "auto" //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
        spot_light_2: {
            power: "auto"  //can be a float value (power: 1.0) or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            color: "auto" //can be a vector of rgb [1.0, 1.0, 0.5] or can be set to "auto" so that it's set automatically when the first mesh is added to the scene
            create_shadow: true
            shadow_map_resolution: 1024
        }
    }

}
